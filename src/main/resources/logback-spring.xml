<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--
      [LOGGING CONFIGURATION]
      - 이 설정 파일은 Spring Boot의 Logback 설정을 정의합니다.
      - 콘솔, 파일, Slack 등으로 로그를 출력하며, 환경(local/dev/prod)별로 다르게 설정됩니다.
        환경은 application.properties내의 spring.profiles.active 속성을 변경하여 속성을 주입해야합니다!!
    -->

    <!-- 1. 로그 파일 디렉토리 설정 (Spring Boot 프로퍼티를 이용해 외부에서 주입 가능) -->
    <springProperty name="LOG_DIR" source="logging.file.path"/>

    <!-- 2. Slack 알림 전송을 위한 설정 (외부 설정을 참조하여 슬랙 채널로 ERROR 로그를 전송) -->
    <springProperty name="DISCORD_WEBHOOK_URI" source="logging.discord-error.webhook-url"/>
    <springProperty name="DISCORD_USERNAME" source="logging.discord-error.username" defaultValue="Application Log"/>
    <springProperty name="DISCORD_AVATAR_URL" source="logging.discord-error.avatar-url" defaultValue=""/>
    <springProperty name="DISCORD_TTR" source="logging.discord-error.ttr" defaultValue="1000"/> <property name="INFO_LOG_DIR" value="${LOG_DIR}/data/"/>
    <property name="ERROR_LOG_DIR" value="${LOG_DIR}/error/"/>

    <!-- 4. 로그 출력 패턴 설정 -->
    <property name="LOG_PATTERN_CONSOLE"
              value="%yellow(%d{yyyy-MM-dd HH:mm:ss}) %magenta([%thread]) %highlight(%-5level) %cyan(%logger{35}) - %msg%n"/>
    <property name="LOG_PATTERN_FILE" value="[%d{yyyy-MM-dd HH:mm:ss}][%thread] %-5level %logger{35} - %msg%n"/>
    <property name="SQL_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{35} - %msg%n"/>
    <property name="MAX_HISTORY" value="60"/>

    <!-- ====================================================== -->
    <!-- 5. 콘솔 로그 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN_CONSOLE}</pattern>
        </encoder>
    </appender>

    <!-- ====================================================== -->
    <!-- 6. INFO 레벨 로그 파일 저장 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${INFO_LOG_DIR}info_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN_FILE}</pattern>
        </encoder>
    </appender>

    <!-- ====================================================== -->
    <!-- 7. ERROR 레벨 로그 파일 저장 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${ERROR_LOG_DIR}error_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN_FILE}</pattern>
        </encoder>
    </appender>

<!--    <appender name="DISCORD_ERROR" class="com.github.maricn.logback.webhook.DiscordAppender">-->
<!--        <webhookUri>${DISCORD_WEBHOOK_URI}</webhookUri>-->
<!--        <username>${DISCORD_USERNAME}</username>-->
<!--        <avatarUrl>${DISCORD_AVATAR_URL}</avatarUrl>-->
<!--        <ttr>${DISCORD_TTR}</ttr>-->
<!--        <layout class="ch.qos.logback.classic.PatternLayout">-->
<!--            <pattern>${LOG_PATTERN_FILE}</pattern>-->
<!--        </layout>-->
<!--    </appender>-->

<!--    <appender name="ASYNC_DISCORD_ERROR" class="ch.qos.logback.classic.AsyncAppender">-->
<!--        <appender-ref ref="DISCORD_ERROR"/>-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--        <queueSize>500</queueSize>-->
<!--        <discardingThreshold>0</discardingThreshold>-->
<!--    </appender>-->

    <!-- ====================================================== -->
    <!-- 9. 프로파일별 로깅 설정 -->

    <!-- ✅ Local 환경: 콘솔에만 로그 출력 -->
    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
        <logger name="org.hibernate.SQL" level="DEBUG"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    </springProfile>

    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
        <logger name="org.hibernate.SQL" level="INFO"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="INFO"/>
    </springProfile>

    <!-- ✅ Dev 환경: 콘솔, 파일 저장 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
        <logger name="org.hibernate.SQL" level="DEBUG"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    </springProfile>

</configuration>