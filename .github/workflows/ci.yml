# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

on:
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-22.04 # NCP Server version
    environment: ${{ github.base_ref == 'main' && 'Product' || 'Develop' }}
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start Elasticsearch & Kibana
        run: |
            docker compose up -d
            until curl -sSf http://localhost:9200 >/dev/null; do
              echo "Waiting for Elasticsearch"
              sleep 5
            done

      - name: Check ES container logs
        run: docker compose logs --tail=50 elasticsearch || true


    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate application.properties from Secrets
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build
